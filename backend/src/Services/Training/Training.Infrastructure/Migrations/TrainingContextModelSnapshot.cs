// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Training.Infrastructure;

#nullable disable

namespace Training.Infrastructure.Migrations
{
    [DbContext(typeof(TrainingContext))]
    partial class TrainingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Training.Domain.Apprentice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Xp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Apprentices", (string)null);
                });

            modelBuilder.Entity("Training.Domain.Coach", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coaches", (string)null);
                });

            modelBuilder.Entity("Training.Domain.Participation", b =>
                {
                    b.Property<string>("TrainingCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ApprenticeId")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.HasKey("TrainingCode", "ApprenticeId");

                    b.HasIndex("ApprenticeId");

                    b.ToTable("Participations", (string)null);
                });

            modelBuilder.Entity("Training.Domain.Room", b =>
                {
                    b.Property<string>("RoomCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomCode");

                    b.ToTable("Rooms", (string)null);
                });

            modelBuilder.Entity("Training.Domain.Training", b =>
                {
                    b.Property<string>("TrainingCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CoachId")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("TrainingCode");

                    b.HasIndex("CoachId");

                    b.HasIndex("RoomCode");

                    b.ToTable("Trainings", (string)null);
                });

            modelBuilder.Entity("Training.Domain.Participation", b =>
                {
                    b.HasOne("Training.Domain.Apprentice", "Apprentice")
                        .WithMany()
                        .HasForeignKey("ApprenticeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Training.Domain.Training", "Training")
                        .WithMany("Participations")
                        .HasForeignKey("TrainingCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apprentice");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("Training.Domain.Training", b =>
                {
                    b.HasOne("Training.Domain.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Training.Domain.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Training.Domain.TimeWindow", "TimeWindow", b1 =>
                        {
                            b1.Property<string>("TrainingCode")
                                .HasColumnType("nvarchar(15)");

                            b1.Property<DateTime>("End")
                                .HasColumnType("datetime2")
                                .HasColumnName("EndTime");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("datetime2")
                                .HasColumnName("StartTime");

                            b1.HasKey("TrainingCode");

                            b1.ToTable("Trainings");

                            b1.WithOwner()
                                .HasForeignKey("TrainingCode");
                        });

                    b.Navigation("Coach");

                    b.Navigation("Room");

                    b.Navigation("TimeWindow")
                        .IsRequired();
                });

            modelBuilder.Entity("Training.Domain.Training", b =>
                {
                    b.Navigation("Participations");
                });
#pragma warning restore 612, 618
        }
    }
}
